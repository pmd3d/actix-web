searchState.loadedDescShard("actix_test", 0, "Integration testing tools for Actix Web applications.\nAsync I/O test buffer.\nTest <code>Request</code> builder.\nA basic HTTP server controller that simplifies the process …\nConstruct test server url\nInserts application data.\nAppends a header, keeping any that were set with an …\nHelper function that returns a response body of a …\nHelper function that returns a deserialized response body …\nCalls service and waits for response future completion.\nGet default HeaderMap of Client.\nSets client timeout for first request.\nCreate default test server config.\nSets cookie for this request.\nCreate <code>DELETE</code> request.\nConstructs test request with DELETE method.\nCreate new empty <code>TestBuffer</code> instance.\nAdd data to read buffer.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate <code>GET</code> request.\nConstructs test request with GET method.\nAccepts HTTP/1.1 only.\nAccepts HTTP/2 only.\nCreate <code>HEAD</code> request.\nInitialize service from application builder instance.\nInserts a header, replacing any that were set with an …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets method of this request.\nCreate new <code>TestBuffer</code> instance with initial read buffer.\nCreates service that always responds with <code>200 OK</code> and no …\nAccepts secure connections via OpenSSL.\nCreate <code>OPTIONS</code> request.\nSets request path pattern parameter.\nCreate <code>PATCH</code> request.\nConstructs test request with PATCH method.\nSets peer address.\nSets test server port.\nCreate <code>POST</code> request.\nConstructs test request with POST method.\nCreate <code>PUT</code> request.\nConstructs test request with PUT method.\nHelper function that returns a response body of a …\nHelper function that returns a deserialized response body …\nConnect request with given method and path.\nAccepts secure connections via Rustls v0.20.\nAccepts secure connections via Rustls v0.21.\nAccepts secure connections via Rustls v0.22.\nFinalizes request creation, calls service, and waits for …\nSerializes <code>data</code> to a URL encoded form and set it as the …\nSerializes <code>data</code> to JSON and set it as the request payload.\nSets request payload.\nStart default <code>TestServer</code>.\nStart test server with custom configuration\nCreates service that always responds with given status …\nStop HTTP server.\nCollects all the bytes produced by <code>body</code>.\nFinalizes request creation and returns <code>HttpRequest</code> and …\nFinalizes request creation and returns <code>HttpRequest</code> …\nFinalizes request creation and returns <code>Request</code> instance.\nFinalizes request creation and returns <code>ServiceRequest</code> …\nFinalizes request creation and returns <code>ServiceResponse</code> …\nGet a localhost socket address with random, unused port.\nSets URI of this request.\nConstruct test server url\nSets HTTP version of this request.\nConstructs test request and sets request URI.\nSets number of workers for the test server.\nConnect to a WebSocket server.\nConnect to WebSocket server at a given path.")